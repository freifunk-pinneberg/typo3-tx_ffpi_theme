/*!
 *  Project:  Bundesversicherungsamt
 *  Version:  1.0.0
 *  
 *  Author:   pinneberg.freifunk.net
 *  Homepage: https://pinneberg.freifunk.net/
 *  Copyright (c) 2019 pinneberg.freifunk.net
 *  
 *  Build:    Thu Sep 05 2019 15:10:40 GMT+0200 (GMT+02:00)
 * 
 */
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  /* Change the default font family in all browsers (opinionated). */
  font-family: "Roboto", sans-serif;
  font-size: 125%;
  line-height: 1.5em;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 1.5rem;
  line-height: 3rem;
  /* Set 1 unit of vertical rhythm on the top and bottom margins. */
  margin: 1.5rem 0; }

h2 {
  font-size: 1.3rem;
  line-height: 1.5rem;
  margin: 1.5rem 0; }

h3 {
  font-size: 1.15rem;
  line-height: 1.5rem;
  margin: 1.5rem 0; }

h4 {
  font-size: 1rem;
  line-height: 1.5rem;
  margin: 1.5rem 0; }

h5 {
  font-size: 0.83rem;
  line-height: 1.5rem;
  margin: 1.5rem 0; }

h6 {
  font-size: 0.67rem;
  line-height: 1.5rem;
  margin: 1.5rem 0; }

/* Grouping content
       ========================================================================== */
/**
       * Set 1 unit of vertical rhythm on the top and bottom margin.
       */
blockquote {
  margin: 1.5rem 40px; }

dl,
ol,
ul {
  margin: 1.5rem 0; }

/**
       * Turn off margins on nested lists.
       */
ol ol,
ol ul,
ul ol,
ul ul {
  margin: 0; }

dd {
  margin: 0 0 0 40px; }

ol,
ul {
  padding: 0 0 0 40px; }

/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1.5rem 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
       * Set 1 unit of vertical rhythm on the top and bottom margin.
       */
p,
pre {
  margin: 1.5rem 0; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: "Roboto", sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.5em;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block;
  /*
         * 1. Set 1 unit of vertical rhythm on the top and bottom margin.
         * 2. Set consistent space for the list style image.
         */
  margin: 1.5rem 0;
  /* 1 */
  padding: 0 0 0 40px;
  /* 2 */
  /**
         * Turn off margins on nested lists.
         */ }
  menu menu,
  ol menu,
  ul menu {
    margin: 0; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

*,
*::before,
*::after {
  box-sizing: border-box; }

img, picture, video {
  max-width: 100%;
  height: auto; }

body {
  overflow-x: hidden;
  color: #666; }

blockquote {
  color: #dc0067;
  font-style: italic;
  margin: 1.44444rem 1.2rem; }

strong {
  font-family: 'Roboto', sans-serif;
  font-style: normal;
  font-weight: 500; }

::-webkit-input-placeholder {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067; }

::-moz-placeholder {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067; }

:-ms-input-placeholder {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067; }

::-ms-input-placeholder {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067; }

::placeholder {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067; }

video {
  border-radius: 3px; }

.responsive__table {
  max-width: 100%;
  overflow-x: auto; }

.h-container {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto; }
  @media (min-width: 576px) {
    .h-container {
      max-width: 540px; } }
  @media (min-width: 768px) {
    .h-container {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .h-container {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .h-container {
      max-width: 1410px; } }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0; }

.h-content--right {
  text-align: right; }

.h-content--centered {
  text-align: center; }

.h-section--start {
  margin-top: 3.5rem; }

.h-section--end {
  margin-bottom: 3.5rem; }

.node-stats {
  display: flex;
  justify-content: flex-end;
  align-items: flex-end; }

.a-btn {
  display: inline-block;
  padding: 12px 50px;
  text-align: center;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  outline: none;
  text-decoration: none;
  border-radius: 3px; }

.a-btn--primary {
  background-color: #dc0067;
  color: #fff;
  box-shadow: 0px 10px 20px 0px rgba(220, 0, 103, 0.2); }

.a-btn--secondary {
  background-color: transparent;
  color: #dc0067;
  border: 2px solid #dc0067; }

.a-btn--lang,
.a-btn--button {
  padding: 0.4rem 1.05rem; }

.m-brand {
  align-self: center; }

.m-brand__name {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067;
  font-size: 1.8rem; }

.m-brand__slogan {
  font-size: 0.8rem; }

.m-card {
  display: flex;
  flex-direction: column;
  border-radius: 5px;
  height: 100%; }

.m-card__image {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #ebebeb;
  padding: 0.75rem 0;
  flex-grow: 0; }

.m-card__content {
  background-color: #fff;
  padding: 2rem 1.5rem 2.25rem 1.5rem;
  flex-grow: 1; }
  .m-card__content P:last-child {
    margin-bottom: 0; }

.m-card__headline {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067;
  margin-top: 0;
  margin-bottom: 1rem; }

.m-card__body a {
  color: #009ee0; }
  .m-card__body a:hover, .m-card__body a:focus, .m-card__body a:active {
    color: #dc0067; }

.m-cta__headline {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067;
  font-size: 2.5rem;
  line-height: 1;
  margin-top: 0; }
  .o-content-element--ffpitheme_stage .m-cta__headline {
    font-size: 3rem; }

.m-cta__body {
  margin-bottom: 2rem; }

.m-nav-footer__list {
  list-style: none;
  padding: 0;
  margin: 0; }

.m-nav-footer__list--1 {
  display: flex;
  justify-content: space-between;
  align-items: flex-start; }

.m-nav-footer__item--1 {
  font-family: 'Roboto Condensed', Sans-Serif;
  font-style: normal;
  font-weight: 700;
  color: #dc0067; }

.m-nav-footer__list--2 {
  margin-top: 1rem; }

.m-nav-footer__link--2 {
  font-family: 'Roboto', sans-serif;
  font-style: normal;
  font-weight: 400;
  color: #666;
  font-size: 0.9rem;
  text-decoration: none; }

.m-nav-main {
  display: flex;
  justify-content: flex-end;
  font-size: 0.9rem; }

.m-nav-main__list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: space-between; }

.m-nav-main__item {
  align-self: center; }
  .m-nav-main__item:not(:last-child) {
    margin-right: 20px; }

.m-nav-main__link {
  color: #666;
  text-decoration: none; }
  .m-nav-main__link:hover {
    color: #dc0067; }
  .m-nav-main__link:focus {
    color: #dc0067; }

.m-nav-main_link--active {
  color: #dc0067; }

.m-nav-main__list--1::after {
  content: '';
  width: 1px;
  height: 100%;
  background-color: #d8d8d8;
  margin: 0 30px 0 27px; }

.m-language-menu__controller {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0; }
  .m-language-menu__controller:checked + .m-language-menu__list {
    display: block; }

.m-language-menu__list {
  display: none; }

.o-content-element {
  padding: 3.75rem 0; }
  .o-content-element:not(.o-content-element--ffpitheme_stage) {
    background-color: #f7f7f7; }
  .o-content-element.o-content-element--ffpitheme_video_teaser {
    padding-top: 7.5rem; }

.o-content-element__inner {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto; }
  @media (min-width: 576px) {
    .o-content-element__inner {
      max-width: 540px; } }
  @media (min-width: 768px) {
    .o-content-element__inner {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .o-content-element__inner {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .o-content-element__inner {
      max-width: 1410px; } }

.o-footer {
  padding: 2rem 0; }

.o-footer__inner {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin: 0 auto; }
  @media (min-width: 576px) {
    .o-footer__inner {
      max-width: 540px; } }
  @media (min-width: 768px) {
    .o-footer__inner {
      max-width: 720px; } }
  @media (min-width: 992px) {
    .o-footer__inner {
      max-width: 960px; } }
  @media (min-width: 1200px) {
    .o-footer__inner {
      max-width: 1410px; } }

.o-footer__logo {
  flex-grow: 0;
  flex-shrink: 0;
  margin-right: 25px; }

.o-footer__nav {
  flex-grow: 1; }

.o-footer__language {
  flex-grow: 1;
  text-align: right; }

.o-grid {
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px; }

.o-grid__col {
  position: relative;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  flex: 0 0 100%;
  max-width: 100%; }

.o-grid--2 .o-grid__col:not(:last-child) {
  margin-bottom: 2rem; }

@media (min-width: 992px) {
  .o-grid--2 .o-grid__col {
    flex: 0 0 50%;
    max-width: 50%; } }

.o-grid--2 .o-grid__col--first {
  order: -1; }
  @media (min-width: 992px) {
    .o-grid--2 .o-grid__col--first {
      order: inherit; } }

.o-grid--3 .o-grid__col:not(:last-child) {
  margin-bottom: 2rem; }

@media (min-width: 992px) {
  .o-grid--3 .o-grid__col {
    flex: 0 0 33.33333%;
    max-width: 33.33333%; } }

.o-header {
  display: block;
  background-color: #ffffff;
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2);
  padding: 1rem 0; }

.o-header__inner {
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
  justify-content: space-between;
  align-items: center; }

.main-navigation {
  padding: 0; }

.o-header__logo {
  display: flex;
  align-content: center; }
  .o-header__logo .logo {
    width: 60px;
    margin-right: 10px;
    transition: transform 1s ease; }
    .o-header__logo .logo:hover {
      transform: rotate(360deg); }

.o-header__navigation {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-end; }

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, -webkit-filter;
  transition-property: opacity, filter;
  transition-property: opacity, filter, -webkit-filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible; }
  .hamburger:hover {
    opacity: 1; }
  .hamburger.is-active:hover {
    opacity: 1; }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: #dc0067; }

.hamburger-box {
  width: 49px;
  height: 24px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -2px; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 49px;
    height: 4px;
    background-color: #dc0067;
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -10px; }
  .hamburger-inner::after {
    bottom: -10px; }

/*
   * Collapse
   */
.hamburger--collapse .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--collapse .hamburger-inner::after {
    top: -20px;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear; }
  .hamburger--collapse .hamburger-inner::before {
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--collapse.is-active .hamburger-inner {
  transform: translate3d(0, -10px, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--collapse.is-active .hamburger-inner::after {
    top: 0;
    opacity: 0;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear; }
  .hamburger--collapse.is-active .hamburger-inner::before {
    top: 0;
    transform: rotate(-90deg);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1); }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/